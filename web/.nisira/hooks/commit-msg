#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

TEXT=$(cat "$1" | sed '/^#.*/d')

if ! [[ $TEXT =~ ^Merge.branch.+ ]]; then

	if ! [[ $TEXT =~ ^\((feat|feature|fixed|enhanced|improved|updated|refactor)\).+ ]]; then
		>&2 echo -e "\033[0;31mError: El formato del mensaje no es correcto\033[0m"
		echo ""
		echo -e "\033[0;32mPREFIJOS PARA INDICAR EL TIPO DE COMMIT\033[0m"
		echo ""
		echo -e "\t- \033[0;34m(fixed)\033[0m descripción del commit indicando el problema corregido."
		echo -e "\t- \033[0;34m(enhanced|improved)\033[0m descripción del commit indicando la mejora."
		echo -e "\t- \033[0;34m(refactor)\033[0m descripción del commit indicando lo refactorizado."
		echo -e "\t- \033[0;34m(feat|feature)\033[0m descripción del commit indicando la nueva característica."
		echo -e "\t- \033[0;34m(updated)\033[0m descripción del commit indicando la actualización de alguna librería y su versión actual."

		exit 1
	fi;

fi;